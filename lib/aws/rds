#!/bin/bash
set -euf
IFS=$'\n\t'

# Functions for AWS Relational Database Service

function rds::create {
    # Create Relational Database Service for given ENV of the PROJECT
    # (unless it already exists)
    #
    # Usage: rds::create \
        # shellcheck disable=SC2120
        local RDS_ENGINE=${1:-postgres}
        local RDS_ENGINE_VERSION=${2:-12.2}
        local RDS_ID=$PROJECT-$ENV
        

    echo "Reading RDS $RDS_ID..."
    aws rds describe-db-instances \
        --db-instance-identifier $RDS_ID \
        &>/dev/null \
        && return 0

    #
    # DB subnet group
    #

    DB_SUBNET_GROUP_NAME=$RDS_ID
    echo "Reading DB subnet group $DB_SUBNET_GROUP_NAME..."
    aws rds describe-db-subnet-groups \
        --db-subnet-group-name $DB_SUBNET_GROUP_NAME \
        &>/dev/null || {

        echo "Creating DB subnet group $DB_SUBNET_GROUP_NAME..."

        ssm::export \
            PRIVATE_A_SUBNET_ID \
            PRIVATE_B_SUBNET_ID

        aws rds create-db-subnet-group \
            --db-subnet-group-name $DB_SUBNET_GROUP_NAME \
            --db-subnet-group-description "DB subnet group for RDS $RDS_ID" \
            --subnet-ids $PRIVATE_A_SUBNET_ID $PRIVATE_B_SUBNET_ID \
            >/dev/null
    }

    #
    # RDS secgroup
    #

    ssm::export VPC_ID
    vpc::create-secgroup \
        RDS_SECGROUP_ID \
        $RDS_ID-rds \
        $VPC_ID

    #
    # RDS
    #

    echo "Creating RDS $RDS_ID..."

    local RDS_USER=master
    local RDS_PASS
    RDS_PASS=$(ssm::rand-str)

    aws rds create-db-instance \
        --db-instance-identifier $RDS_ID \
        --engine $RDS_ENGINE \
        --engine-version $RDS_ENGINE_VERSION \
        --db-instance-class db.t3.micro \
        --allocated-storage 20 \
        --max-allocated-storage 2000 \
        --availability-zone $AWS_AZ \
        --db-subnet-group-name $DB_SUBNET_GROUP_NAME \
        --vpc-security-group-ids $RDS_SECGROUP_ID \
        --no-publicly-accessible \
        --master-username $RDS_USER \
        --master-user-password $RDS_PASS \
        --backup-retention-period 14 \
        --preferred-backup-window 08:00-09:00 \
        --preferred-maintenance-window Sun:10:00-Sun:11:00 \
        --deletion-protection \
        >/dev/null

    #
    # RDS endpoint
    #

    echo -n "Waiting for RDS endpoint, please DON'T interrupt..."
    local RDS_ENDPOINT
    while true
    do
        RDS_ENDPOINT=$(
            aws rds describe-db-instances \
                --db-instance-identifier $RDS_ID \
                --query "DBInstances[].Endpoint.Address" \
                --output text
        )
        [[ -z $RDS_ENDPOINT ]] || break
        echo -n .
        sleep 1
    done
    echo

    ssm::put RDS_USER $RDS_USER
    ssm::put RDS_PASS $RDS_PASS
    ssm::put RDS_ENDPOINT $RDS_ENDPOINT
}
